name: CI Assignment 6

on:
  pull_request:
    types:
      - opened
      - synchronize

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Run build
        id: build
        run: |
          pnpm -F assignment-6 build
        continue-on-error: true

      - name: Comment on PR if build fails
        if: steps.build.outcome == 'failure'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN_FOR_CI }}
          script: |
            const { execSync } = require('child_process');
            let buildLog = '';
            try {
              buildLog = execSync('pnpm -F assignment-6 build 2>&1').toString();
            } catch (error) {
              buildLog = error.stdout.toString();
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ❌ Build Failed\n\`\`\`\n${buildLog}\n\`\`\``
            });

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: job2 구현
        run: echo "job2의 내용을 구현해주세요"

  test:
    runs-on: ubuntu-latest
    steps:
      - name: job3 구현
        run: echo "job3의 내용을 구현해주세요"

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: job4 구현
        run: echo "job4의 내용을 구현해주세요"

  assign_reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: job5 구현
        run: echo "job5의 내용을 구현해주세요"
